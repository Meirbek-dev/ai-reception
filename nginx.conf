server {
    listen 80;
    server_name ai-reception.tou.edu.kz;

    # Allow ACME HTTP-01 challenge paths to pass through (Let\'s Encrypt)
    location /.well-known/acme-challenge/ {
        root /var/www/letsencrypt;
        try_files $uri =404;
    }

    # Redirect other HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl http2;
    server_name ai-reception.tou.edu.kz;

    # SSL certificates (adjust paths to your certificates)
    ssl_certificate /etc/nginx/ssl/ai-reception.tou.edu.kz.crt;
    ssl_certificate_key /etc/nginx/ssl/ai-reception.tou.edu.kz.key;

    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Max upload size
    client_max_body_size 100M;

    root /var/www/ai-reception;

    # Serve ACME challenges from the filesystem too
    location /.well-known/acme-challenge/ {
        alias /var/www/letsencrypt/.well-known/acme-challenge/;
        try_files $uri =404;
    }

    # API routes: proxy only API-related paths to the backend
    location ~ ^/(upload|files|download|download_zip|icons|health) {
        proxy_pass http://127.0.0.1:5040;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Allow large request bodies (file uploads)
        client_body_buffer_size 128k;
        client_max_body_size 100M;

        # Timeouts for file processing
        proxy_connect_timeout 600;
        proxy_send_timeout 600;
        proxy_read_timeout 600;
        send_timeout 600;
    }

    # Fallback: SPA routing - try to serve a file, otherwise return index.html
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Recommended security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'" always;

    # Logging
    access_log /var/log/nginx/ai-reception.access.log;
    error_log /var/log/nginx/ai-reception.error.log;
}
